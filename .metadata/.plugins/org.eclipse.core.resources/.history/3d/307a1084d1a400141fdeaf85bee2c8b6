/*
 ============================================================================
 Name        : IPC.c
 Author      : Justin Rohr & Kalee Stutzman
 Description : Program that spawns a child that sends user defined signals
 while the parent listens for signals.
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <errno.h>

void sigHandler(int in) {
	printf("Received signal: ");
	if (in == 16)
		printf("SIGUSR1 \n");
	else if (in == 17)
		printf("SIGUSR2 \n");
	else if (in == 2)
		; //Kill Child & Parent
}

int main(void) {
	pid_t pid;

	pid = fork();

	if (pid < 0) {
		perror("Fork failed");
		exit(errno);
	} else if (pid == 0) { //Child

	} else { //Parent
		while (True){
			printf("Waiting...     ");
			signal(SIGINT, sigHandler);
			signal(SIGUSR1, sigHandler);
			signal(SIGUSR2, sigHandler);

		}
	}

	return EXIT_SUCCESS;
}
